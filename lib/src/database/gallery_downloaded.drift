CREATE TABLE gallery_downloaded
(
    gid                   INT  NOT NULL PRIMARY KEY,
    token                 TEXT NOT NULL,
    title                 TEXT NOT NULL,
    category              TEXT NOT NULL,
    pageCount             INT  NOT NULL,
    galleryUrl            TEXT NOT NULL,
    oldVersionGalleryUrl  TEXT,
    uploader              TEXT,
    publishTime           TEXT NOT NULL,
    downloadStatusIndex   INT  NOT NULL,
    insertTime            TEXT,
    downloadOriginalImage BOOL NOT NULL DEFAULT FALSE,
    priority              INT,
    sortOrder             INT  NOT NULL DEFAULT 0,
    groupName             TEXT
);

CREATE TABLE image
(
    url                 TEXT NOT NULL,
    serialNo            INT  NOT NULL,
    gid                 INT  NOT NULL REFERENCES gallery_downloaded (gid),
    path                TEXT NOT NULL,
    imageHash           TEXT NOT NULL,
    downloadStatusIndex INT  NOT NULL,
    PRIMARY KEY (gid, serialNo)
);

CREATE TABLE gallery_group
(
    groupName TEXT NOT NULL PRIMARY KEY,
    sortOrder INT  NOT NULL DEFAULT 0
);

selectGallerysWithImages:
SELECT g.gid,
       g.token,
       g.title,
       g.category,
       g.pageCount,
       g.galleryUrl,
       g.oldVersionGalleryUrl,
       g.uploader,
       g.publishTime,
       g.downloadStatusIndex as galleryDownloadStatusIndex,
       g.insertTime,
       g.downloadOriginalImage,
       g.priority,
       g.sortOrder,
       g.groupName,
       i.url,
       i.serialNo,
       i.path,
       i.imageHash,
       i.downloadStatusIndex as imageDownloadStatusIndex
FROM gallery_downloaded g
         left join image i on g.gid = i.gid
ORDER BY insertTime DESC, serialNo;

selectGallerys:
SELECT *
FROM gallery_downloaded
ORDER BY insertTime DESC;

insertGallery:
insert into gallery_downloaded(gid, token, title, category, pageCount, galleryUrl, oldVersionGalleryUrl, uploader,
                               publishTime, downloadStatusIndex, insertTime, downloadOriginalImage, priority, groupName)
values (:gid, :token, :title, :category, :pageCount, :galleryUrl, :oldVersionGalleryUrl, :uploader, :publishTime,
        :downloadStatusIndex, :insertTime, :downloadOriginalImage, :priority, :groupName);

deleteGallery:
delete
from gallery_downloaded
where gid = :gid;

updateGallery:
update gallery_downloaded
set downloadStatusIndex = :downloadStatusIndex
where gid = :gid;

updateGalleryPriority:
update gallery_downloaded
set priority = :priority
where gid = :gid;

updateGalleryOrder:
update gallery_downloaded
set sortOrder = :sortOrder
where gid = :gid;

updateGalleryGroup:
update gallery_downloaded
set groupName = :groupName
where gid = :gid;


selectImagesByGalleryId:
SELECT *
FROM gallery_downloaded
where gid = :gid;

insertImage:
insert into image
values (:url, :serialNo, :gid, :path, :imageHash, :downloadStatusIndex);

updateImageStatus:
update image
set downloadStatusIndex = :downloadStatusIndex
where gid = :gid
  AND url = :url;

updateImagePath:
update image
set path = :path
where gid = :gid
  AND url = :url;

updateImageUrl:
update image
set url = :newUrl
where gid = :gid
  AND serialNo = :serialNo;

deleteImage:
delete
from image
where gid = :gid
  AND url = :url;

deleteImagesWithGid:
delete
from image
where gid = :gid;


selectGalleryGroups:
SELECT *
FROM gallery_group
ORDER BY sortOrder;

insertGalleryGroup:
insert into gallery_group(groupName)
values (:groupName);

renameGalleryGroup:
update gallery_group
set groupName = :newGroupName
where groupName = :oldGroupName;

updateGalleryGroupOrder:
update gallery_group
set sortOrder = :sortOrder
where groupName = :groupName;

reGroupGallery:
update gallery_downloaded
set groupName = :newGroupName
where groupName = :oldGroupName;

deleteGalleryGroup:
delete
from gallery_group
where groupName = :groupName;